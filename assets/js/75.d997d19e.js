(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{387:function(a,e,t){"use strict";t.r(e);var r=t(8),s=Object(r.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("p",[a._v("create date: 2023-06-04 19:03"),e("br"),a._v("\nStatus: #idea"),e("br"),a._v("\nTags: [[java]]")]),a._v(" "),e("hr"),a._v(" "),e("h1",{attrs:{id:"java中的finalize方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java中的finalize方法"}},[a._v("#")]),a._v(" java中的finalize方法")]),a._v(" "),e("ul",[e("li",[a._v("当垃圾回收器确定不存在对该对象的更多引用时，由对象的垃圾回收器调用此方法，子类可以重写该方法，做一些释放资源的操作")]),a._v(" "),e("li",[a._v("垃圾回收发生在没有引用指向某个对象时，系统调用该方法进行垃圾回收，但并不一定是马上回收，它有自己的回收算法，也可以主动通过System.gc()来触发垃圾回收机制（但也不能完全确定，可能系统内有更高优先级的任务？）。")]),a._v(" "),e("li",[a._v("可以用于自己的逻辑实现，如关闭服务器数据库连接，或关闭。")]),a._v(" "),e("li",[a._v("非阻塞调用")])]),a._v(" "),e("h1",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[a._v("#")]),a._v(" references")])])}),[],!1,null,null,null);e.default=s.exports}}]);