(window.webpackJsonp=window.webpackJsonp||[]).push([[200],{514:function(a,t,_){"use strict";_.r(t);var v=_(8),s=Object(v.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("create date: 2023-08-21 17:14"),t("br"),a._v("\nStatus: #idea"),t("br"),a._v("\nTags: [[嵌入式]]")]),a._v(" "),t("hr"),a._v(" "),t("h1",{attrs:{id:"电网项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#电网项目"}},[a._v("#")]),a._v(" 电网项目")]),a._v(" "),t("h2",{attrs:{id:"上位机界面添加"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#上位机界面添加"}},[a._v("#")]),a._v(" 上位机界面添加")]),a._v(" "),t("p",[t("RouterLink",{attrs:{to:"/_posts/zk/匿名上位机传输测试.html"}},[a._v("匿名上位机传输测试")])],1),a._v(" "),t("h2",{attrs:{id:"flash芯片添加"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flash芯片添加"}},[a._v("#")]),a._v(" flash芯片添加")]),a._v(" "),t("blockquote",[t("p",[a._v("基于存储数据的需要，应在原本的模块中添加flash模块")])]),a._v(" "),t("h3",{attrs:{id:"选型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#选型"}},[a._v("#")]),a._v(" 选型")]),a._v(" "),t("ul",[t("li",[a._v("大小: 4M。存放数据长达一年以上，经过计算，以5分钟存储一组数据来说，需要大小为2MB的大小的flash")])]),a._v(" "),t("h2",{attrs:{id:"引脚分配"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引脚分配"}},[a._v("#")]),a._v(" 引脚分配")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://pic-1312640559.cos.ap-chengdu.myqcloud.com//img/20240108133358.png",alt:"image.png"}})]),a._v(" "),t("h3",{attrs:{id:"flash芯片原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flash芯片原理"}},[a._v("#")]),a._v(" flash芯片原理")]),a._v(" "),t("p",[t("img",{attrs:{src:"Drawing%202024-01-09%2013.48.41.excalidraw.md",alt:"Drawing 2024-01-09 13.48.41.excalidraw"}})]),a._v(" "),t("h4",{attrs:{id:"扇区擦除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扇区擦除"}},[a._v("#")]),a._v(" 扇区擦除")]),a._v(" "),t("p",[a._v("注意几个地方")]),a._v(" "),t("p",[a._v("发送24位地址，因为一次只能发送1个字节，所以需要发3次，如果配置的是MSB优先，则先发最高8位，再发中间8位，再发低8位。")]),a._v(" "),t("p",[a._v("这里难以理解的是“扇区地址”乘以4096")]),a._v(" "),t("p",[a._v("事实上，这里传入的不是扇区地址，而是扇区的id号，所以需要再乘以4096（每个扇区4Kbyte字节），得出该扇区的起始地址。")]),a._v(" "),t("p",[a._v("128个块，每块16个扇区，则一共有2048个扇区，则扇区id从0到2047。")]),a._v(" "),t("p",[a._v("怎么知道一个地址落在哪个扇区内呢？")]),a._v(" "),t("p",[a._v("通常，给一个地址，比如0x0000FF（255），用这个地址除以4096，得到整数结果，就是所在的扇区号。因为一个扇区4096个字节，类似于进制每4096进1，所以除以进制后取整就能得到扇区号。再把扇区号乘以4096，就能得到扇区的首地址。")]),a._v(" "),t("p",[a._v("比如地址0x7FFFFF（8,388,607），除以4096，结果为2,047.999755859375…，取整为2047，刚好是最后一个扇区id，再把2047乘以4096，就能得到最后一个扇区的起始地址8,384,512，也就是0x7FF000，经验证是正确的。")]),a._v(" "),t("p",[a._v("其实很好理解，如果一个扇区是10单位的大小，那么0~9就会落入第一个扇区，10~19就会落入第二个扇区……类比理解。")]),a._v(" "),t("ul",[t("li",[a._v("[x] 为什么是一个扇区到一页分级写入呢？ 📅 2024-01-10 ✅ 2024-01-25\n因为使用的芯片好像最多一次写入就是一页，所以扇区的写入需要分成页，且页写入不需要对齐")])]),a._v(" "),t("h3",{attrs:{id:"流程图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程图"}},[a._v("#")]),a._v(" 流程图")]),a._v(" "),t("p",[t("img",{attrs:{src:"%E7%94%B5%E7%BD%91%E9%A1%B9%E7%9B%AE%E4%BC%A0%E6%84%9F%E8%8A%82%E7%82%B9%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1.excalidraw.md",alt:"电网项目传感节点架构设计.excalidraw"}})]),a._v(" "),t("h3",{attrs:{id:"调试日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#调试日志"}},[a._v("#")]),a._v(" 调试日志")]),a._v(" "),t("h4",{attrs:{id:"_20240305"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20240305"}},[a._v("#")]),a._v(" 20240305")]),a._v(" "),t("ul",[t("li",[a._v("状态：外置flash能在第一次写入后成功读出，但后续几次都失败了，读出的结果为全1,疑似为被擦除的结果")]),a._v(" "),t("li",[a._v("验证：使用测试程序进行假设的验证：\n"),t("ul",[t("li",[a._v("测试结果无问题，假设不成立")])])]),a._v(" "),t("li",[a._v("对比测试程序与落地程序：\n"),t("ul",[t("li",[a._v("成功，原程序在修改了写入地址之后就能成功读出，推测问题是原程序是在同一个位置写入，但读出的位置在随着数据的增多而后移，读出的位置还没有写入，所以产生了错误。")])])])]),a._v(" "),t("h4",{attrs:{id:"_20240511"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20240511"}},[a._v("#")]),a._v(" 20240511")]),a._v(" "),t("h5",{attrs:{id:"功耗控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#功耗控制"}},[a._v("#")]),a._v(" 功耗控制")]),a._v(" "),t("ul",[t("li",[a._v("休眠功耗：\n"),t("ul",[t("li",[a._v("以下输入电压为5V")]),a._v(" "),t("li",[a._v("关闭外设的情况：\n"),t("ul",[t("li",[a._v("关闭mpu6050与scl3300的低功耗模式：2.38mA")]),a._v(" "),t("li",[a._v("mpu6050进入低功耗模式: 1.95mA左右")]),a._v(" "),t("li",[a._v("SCL3300进入低功耗模式：800uA左右")]),a._v(" "),t("li",[a._v("在mpu6050与SCL3300同时进入低功耗模式，没有温度传感器与flash的v2.2模块功耗在30uA左右，而拆掉温度传感器的v2.3版本功耗在800uA左右，进入power down模式时功耗降低至200uA。初步猜测是flash的功耗过高\n"),t("ul",[t("li",[a._v("尝试对flash的IO引脚进行设置")])])]),a._v(" "),t("li",[a._v("网上有人实现了使用flash时功耗在5uA（单指flash的功耗）以下")])])])])])]),a._v(" "),t("h4",{attrs:{id:"_20240531"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20240531"}},[a._v("#")]),a._v(" 20240531")]),a._v(" "),t("h5",{attrs:{id:"flash功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flash功能"}},[a._v("#")]),a._v(" flash功能")]),a._v(" "),t("ul",[t("li",[a._v("数据保存机制：\n"),t("ul",[t("li",[a._v("在空间足够时，应该能在掉电之后继续在上次写入的位置写入")]),a._v(" "),t("li",[a._v("能够知道写入了多少数据")]),a._v(" "),t("li",[a._v("在达到上限时的选择：更新最后一个值/或是停止写入")])])]),a._v(" "),t("li",[a._v("方案\n"),t("ul",[t("li",[a._v("使用文件系统，如适用于嵌入式的FatFs文件系统，对于SPI Flash or SD Card之类的大容量设备，这是一种更高效的方式，为了存储与管理数据，而在存储介质上建立的一种组织结构，这些结构包括操作系统引导区、目录和文件。常见的windows下的文件系统包括FAT32、NTFS、exFAT。在使用文件系统前，要先对存储介质进行格式化。格式化先擦除原先内容，在存储介质上新建一个文件分配表和目录。这样，文件系统就可能记录数据存储的物理地址，剩余空间。")]),a._v(" "),t("li",[a._v("自己设计文件存储结构：\n"),t("ul",[t("li",[a._v("下次存储起始位置 --4byte")]),a._v(" "),t("li",[a._v("休眠后继续工作")]),a._v(" "),t("li",[a._v("断电重启后继续工作")]),a._v(" "),t("li",[a._v("存储空间已满时不再写入")]),a._v(" "),t("li",[a._v("数据采集模式（不断写入）")]),a._v(" "),t("li",[a._v("数据读出模式（采集完成后对数据的读出）")]),a._v(" "),t("li",[a._v("数据清除模式")]),a._v(" "),t("li",[a._v("三种模式的切换")])])])])])]),a._v(" "),t("h1",{attrs:{id:"references"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[a._v("#")]),a._v(" references")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/hanyupeng123/article/details/109325263",target:"_blank",rel:"noopener noreferrer"}},[a._v("低功耗配置IO注意事项_gpio高阻低功耗-CSDN博客"),t("OutboundLink")],1),a._v(" "),t("a",{attrs:{href:"https://www.cnblogs.com/The-explosion/p/13170732.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("FatFs文件系统 - 孤情剑客 - 博客园 (cnblogs.com)"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);