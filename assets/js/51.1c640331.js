(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{364:function(t,e,s){"use strict";s.r(e);var r=s(8),a=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("create date: 2023-09-27 10:42"),e("br"),t._v("\nStatus: #idea"),e("br"),t._v("\nTags: [[C语言]] [[初始化]]")]),t._v(" "),e("hr"),t._v(" "),e("h1",{attrs:{id:"c语言中的初始化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c语言中的初始化"}},[t._v("#")]),t._v(" c语言中的初始化")]),t._v(" "),e("h2",{attrs:{id:"int-sum-在c语言中会自动初始化吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#int-sum-在c语言中会自动初始化吗"}},[t._v("#")]),t._v(" int sum；在c语言中会自动初始化吗")]),t._v(" "),e("p",[t._v("在C语言中，变量在定义时如果没有显式赋初值，它们的初始值是不确定的。对于基本数据类型，如int、float、char等，如果没有显式初始化，它们的初始值通常是垃圾值。")]),t._v(" "),e("p",[t._v("对于全局变量和静态变量，在C语言中，它们会自动初始化为0。因此，如果将变量 "),e("code",[t._v("int sum;")]),t._v(" 声明为全局变量或静态变量，在定义时它会自动初始化为0。")]),t._v(" "),e("p",[t._v("但对于局部变量（在函数内部定义的变量），如果没有显式初始化，它们的初始值是不确定的，可能是任意值。")]),t._v(" "),e("p",[t._v("为了避免使用未初始化的变量，应该在定义变量时显式地为其赋初值，以确保变量始终具有确定的值。例如，可以使用 "),e("code",[t._v("int sum = 0;")]),t._v(" 来显式初始化变量 "),e("code",[t._v("sum")]),t._v("。这样可以避免使用未初始化变量引发的不可预测的行为和错误。")]),t._v(" "),e("h1",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" references")])])}),[],!1,null,null,null);e.default=a.exports}}]);