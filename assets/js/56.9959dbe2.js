(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{369:function(t,s,a){"use strict";a.r(s);var n=a(8),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("create date: 2023-10-31 17:13"),s("br"),t._v("\nStatus: #idea"),s("br"),t._v("\nTags: [[c语言]]")]),t._v(" "),s("hr"),t._v(" "),s("h1",{attrs:{id:"c语言中的数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c语言中的数组"}},[t._v("#")]),t._v(" c语言中的数组")]),t._v(" "),s("p",[t._v("在对数组进行索引时，有："),s("code",[t._v("array1[i]")]),t._v("与"),s("code",[t._v("*(array1 + i)")]),t._v("是等价的：")]),t._v(" "),s("ul",[s("li",[t._v("数组变量名指向的是首个元素的地址，但不能作为lvalue被修改，可以用"),s("code",[t._v("array1[i]")]),t._v("的方式进行修改与访问")]),t._v(" "),s("li",[t._v("两者等价的原因是因为前者会自动被解算为后者")])]),t._v(" "),s("h1",{attrs:{id:"c语言中的数组的复制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c语言中的数组的复制"}},[t._v("#")]),t._v(" c语言中的数组的复制")]),t._v(" "),s("ul",[s("li",[t._v("str1 = str2这种格式会直接复制指针，结果是两个数组指向同一个内存空间")]),t._v(" "),s("li",[t._v("常用的c标准库与区别：\n"),s("ul",[s("li",[t._v("strncpy，将n个字符从源字符数组复制到目标数组，当n小于源数组时，不会复制"),s("code",[t._v("\\0")]),t._v("字符串的结尾标志，就会在应用时导致难以预知的问题")]),t._v(" "),s("li",[t._v("strcpy，更加危险，因为没有指定复制的个数的话，就会导致可能对超出数组边界的内存空间进行操作。")]),t._v(" "),s("li",[t._v("strdup，会为复制的字符串分配空间，将其复制进去。这涉及动态分配的相关知识。")])])]),t._v(" "),s("li",[t._v("[x] 既然有"),s("code",[t._v("sizeof(arr)/sizeof(int)")]),t._v("这种方式，那又为什么不在复制字符串的时候对源数组和目标数组进行判断呢？ ✅ 2023-12-05")])]),t._v(" "),s("blockquote",[s("p",[t._v("请注意，这只适用于静态数组，对于指向动态分配内存的指针，该方法无效。")])]),t._v(" "),s("h2",{attrs:{id:"为什么在了函数外可以通过这种方式计算数组长度-而在函数内就不行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么在了函数外可以通过这种方式计算数组长度-而在函数内就不行"}},[t._v("#")]),t._v(" 为什么在了函数外可以通过这种方式计算数组长度，而在函数内就不行:")]),t._v(" "),s("p",[t._v("在函数外部，如果你声明一个静态数组，并使用sizeof运算符计算其大小，那么会得到正确的结果。这是因为在函数外部声明的静态数组具有静态存储期，编译器可以在编译时确定其大小。")]),t._v(" "),s("p",[t._v("例如，以下代码在函数外部声明了一个静态数组：")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("size_t")]),t._v(" length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("sizeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("在这种情况下，sizeof(str)将返回整个数组的大小，而sizeof(str[0])将返回单个元素的大小。因此，通过将它们相除，你可以得到正确的数组元素数量。")]),t._v(" "),s("p",[t._v("然而，在函数内部，当你将一个数组作为函数参数传递时，它将被隐式地转换为指向其第一个元素的指针。由于指针类型的大小与指针指向的数据类型无关，所以在函数内部使用sizeof来计算指针类型的大小是不正确的，因为它不会返回整个数组的大小。")]),t._v(" "),s("p",[t._v("因此，在函数内部使用sizeof运算符来计算数组的大小将导致错误的结果。为了正确计算数组的元素数量，你需要将数组的长度作为额外的参数传递给函数。")]),t._v(" "),s("h1",{attrs:{id:"c语言中将字符串转换为int类型的数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c语言中将字符串转换为int类型的数字"}},[t._v("#")]),t._v(" c语言中将字符串转换为int类型的数字")]),t._v(" "),s("h2",{attrs:{id:"库函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#库函数"}},[t._v("#")]),t._v(" 库函数")]),t._v(" "),s("ul",[s("li",[t._v("atoi函数")]),t._v(" "),s("li",[t._v("strtol函数")])]),t._v(" "),s("h2",{attrs:{id:"多维数组与指针数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多维数组与指针数组"}},[t._v("#")]),t._v(" 多维数组与指针数组")]),t._v(" "),s("h3",{attrs:{id:"多维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多维数组"}},[t._v("#")]),t._v(" 多维数组：")]),t._v(" "),s("p",[t._v("int marray[4][3]\n"),s("img",{attrs:{src:"https://pic-1312640559.cos.ap-chengdu.myqcloud.com//img/20231206152203.png",alt:"image.png"}})]),t._v(" "),s("h3",{attrs:{id:"指针数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指针数组"}},[t._v("#")]),t._v(" 指针数组：")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" row0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" row1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" row2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" row3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" myMatrix"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("row0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" row1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" row2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" row3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://pic-1312640559.cos.ap-chengdu.myqcloud.com//img/20231206152149.png",alt:"image.png"}}),t._v("\n在上图中，我们又有了一个 4x3 矩阵，不过，这个矩阵在内存中的表示方式相当不同。在这里，_myMatrix_是由 4 个指针组成的数组，这些指针明确指向矩阵的行数组。左图描述了该数据结构的概念：_myMatrix_是一个由 4 个指针组成的数组，每个指针都指向_row0-row3_ 数组中的一行。图的右侧描述了该数据结构的内存布局。在这里，每个行数组在内存中不一定相邻（可能相邻，但不一定）。现在， _myMatrix_的四个条目中包含指向四个行数组（地址）的指针。")]),t._v(" "),s("p",[t._v("两种表示方法访问数组元素的方式类似。在两种表示法中，"),s("em",[t._v("myMatrix")]),t._v("_[2_] 的值都是指向矩阵第二行数组的指针。同样，"),s("em",[t._v("myMatrix")]),t._v("["),s("em",[t._v("2")]),t._v("] 的值是指向矩阵第二行第一列"),s("strong",[t._v("double")]),t._v("的指针。")]),t._v(" "),s("p",[t._v("然而，这两者之间有一些明显的不同。首先，在这个指针数组表示法中，指向行的指针明确存储在内存中。因此，计算_myMatrix_ "),s("em",[t._v("[i")]),t._v("] 实际上需要从内存中读取一个值，而不仅仅是计算偏移量。这种差异对性能有影响，我们在此不做讨论，因为我们不准备讨论性能问题（这种讨论需要详细的硬件知识）。")]),t._v(" "),s("p",[t._v("明确存储指向矩阵行的指针可以让我们用这种表示法做一些第一种表示法做不到的事情。首先，我们不必受限于每行的大小必须与其他行相同。其次，在指针数组表示法中，"),s("em",[t._v("myMatrix")]),t._v(" "),s("em",[t._v("[i")]),t._v("] 是一个 l 值（回想一下，如果我们只声明一个多维数组，它就不是 l 值）。因此，我们可以根据需要改变指针的指向。第三，我们可以让两行指向完全相同的数组（相互别名）。虽然这些能力对于数学矩阵来说可能用处不大，但对于其他各种拥有多维数据的任务来说，它们却非常有用。当我们学习动态分配时，这种指针数组表示法也将被证明非常有用。")]),t._v(" "),s("h2",{attrs:{id:"使用陷阱"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用陷阱"}},[t._v("#")]),t._v(" 使用陷阱")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stdio.h"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string.h"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stddef.h"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stdlib.h"')])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr21"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr22"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" arr23"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("arr21"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr22"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr23"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" arr3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arr3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("p",[t._v("上述代码中"),s("code",[t._v("int ** arr3 = (int **)arr1;")]),t._v("使用了多重指针对数组进行了转换，最后在依照数组的方式进行寻址"),s("code",[t._v('printf("%d\\n",arr3[2][1]);')]),t._v("时就会出现错误。这是因为arr3[2][1]会先寻址到"),s("code",[t._v("arr3[2]")]),t._v("该位置是存储的原数组中的元素，是一个值而非指针，当进行更进一步的寻址时就会出现错误。这也是在函数中的参数有多维数组时需要注意的地方。"),s("code",[t._v("int **")]),t._v("类型的的参数只能接受指针数组，而不能使用接受原始的多维数组作为参数，这里可以使用"),s("code",[t._v("arr[][2]")]),t._v("作为参数。")]),t._v(" "),s("h1",{attrs:{id:"references"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" references")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/u011852211/article/details/52743637",target:"_blank",rel:"noopener noreferrer"}},[t._v("sizeof获取数组长度_sizeof 求数组长度-CSDN博客"),s("OutboundLink")],1),t._v(" "),s("a",{attrs:{href:"https://www.coursera.org/learn/pointers-arrays-recursion/supplement/IpCYm/array-of-pointers",target:"_blank",rel:"noopener noreferrer"}},[t._v("指针数组 | Coursera"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);