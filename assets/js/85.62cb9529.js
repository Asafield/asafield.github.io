(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{400:function(t,a,e){"use strict";e.r(a);var s=e(8),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("create date: 2023-04-14 14:12"),a("br"),t._v("\nStatus: #idea"),a("br"),t._v("\nTags:")]),t._v(" "),a("hr"),t._v(" "),a("h1",{attrs:{id:"java中的封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java中的封装"}},[t._v("#")]),t._v(" java中的封装")]),t._v(" "),a("ul",[a("li",[t._v("封装（encapsulation）就是把抽象出的数据[属性]和对数据的操作[方法]封装在一起，数据被保护在内部，程序的其它部分只有通过被授权的操作[方法]，才能对数据选行操作。\n"),a("img",{attrs:{src:"https://pic-1312640559.cos.ap-chengdu.myqcloud.com/img/20230414141751.png",alt:"image.png"}})])]),t._v(" "),a("h3",{attrs:{id:"实现封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现封装"}},[t._v("#")]),t._v(" 实现封装")]),t._v(" "),a("ul",[a("li",[t._v("属性私有化（private)")]),t._v(" "),a("li",[t._v("提供一个公共的方法，对属性判断并赋值（加入数据验证的逻辑）------- set方法")]),t._v(" "),a("li",[t._v("提供公共的public方法，用于获取属性的值 （加入权限判断的逻辑）------------ get方法")]),t._v(" "),a("li",[t._v("在使用构造器时，可以直接调用set方法，以防止权限限制失效")])]),t._v(" "),a("h1",{attrs:{id:"references"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" references")])])}),[],!1,null,null,null);a.default=r.exports}}]);