(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{516:function(e,t,r){"use strict";r.r(t);var a=r(8),s=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("create date: 2023-11-06 21:38"),t("br"),e._v("\nStatus: #idea"),t("br"),e._v("\nTags: [[c++]] [[ai]]")]),e._v(" "),t("hr"),e._v(" "),t("h1",{attrs:{id:"类是如何存储的呢-对象又是如何存储的呢"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类是如何存储的呢-对象又是如何存储的呢"}},[e._v("#")]),e._v(" 类是如何存储的呢，对象又是如何存储的呢？")]),e._v(" "),t("p",[e._v("在C++中，类是一种用户自定义的数据类型，它可以包含成员变量和成员函数。类的对象是根据类定义创建的实例，它们在内存中的存储方式与C语言中的结构体类型和结构体变量有一些相似之处，但也有一些不同之处。")]),e._v(" "),t("p",[e._v("类的存储方式：\n当定义一个类时，编译器会根据类的成员变量的类型和访问权限来确定类在内存中的存储布局。通常，类的成员变量会按照声明的顺序依次存储在内存中。编译器可能会对成员变量进行对齐操作，以便于访问和提高性能。此外，类的成员函数通常不会存储在对象本身的内存中，而是单独存储在程序代码区。")]),e._v(" "),t("p",[e._v('类的对象的存储方式：\n当创建一个类的对象时，系统会为该对象分配内存空间。对象的大小取决于类的成员变量的类型和数量。类的对象在内存中存储为连续的内存块，其中包含了对象的成员变量的值。对象的成员变量可以通过对象名和成员访问运算符（"."）进行访问。')]),e._v(" "),t("p",[e._v("与C语言中的结构体类型和结构体变量相比，类和类的对象的存储方式有一些差异。C++中的类可以包含成员函数，而结构体通常只包含成员变量。此外，C++中的类支持继承、多态等特性，这些特性会影响类对象的存储方式。但在一般情况下，类和结构体都是将成员变量按照声明顺序存储在内存中的连续内存块中。")]),e._v(" "),t("h1",{attrs:{id:"references"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" references")]),e._v(" "),t("p",[e._v("poe.com")])])}),[],!1,null,null,null);t.default=s.exports}}]);