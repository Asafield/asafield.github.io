(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{358:function(s,t,n){"use strict";n.r(t);var a=n(8),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("create date: 2024-02-21 07:19"),t("br"),s._v("\nStatus: #idea"),t("br"),s._v("\nTags:")]),s._v(" "),t("hr"),s._v(" "),t("h1",{attrs:{id:"c语言中的extern关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c语言中的extern关键字"}},[s._v("#")]),s._v(" c语言中的extern关键字")]),s._v(" "),t("h3",{attrs:{id:"extern是什么及其作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extern是什么及其作用"}},[s._v("#")]),s._v(" "),t("strong",[s._v("extern是什么及其作用")])]),s._v(" "),t("p",[s._v("extern是c++引入的一个关键字，它可以应用于一个"),t("strong",[s._v("全局变量，函数或模板声明")]),s._v("，说明该符号具有外部链接_(external linkage)_属性。也就是说，这个符号在别处定义。一般而言，C++全局变量的作用范围仅限于当前的文件，但同时C++也支持分离式编译，允许将程序分割为若干个文件被独立编译。于是就需要在文件间共享数据，这里extern就发挥了作用。")]),s._v(" "),t("h4",{attrs:{id:"先导知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#先导知识"}},[s._v("#")]),s._v(" "),t("strong",[s._v("先导知识")])]),s._v(" "),t("h5",{attrs:{id:"符号的定义和声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#符号的定义和声明"}},[s._v("#")]),s._v(" "),t("strong",[s._v("符号的定义和声明")])]),s._v(" "),t("p",[s._v("在介绍extern之前，我们需要了解一下变量的声明和定义。变量的声明指向程序表名变量的类型和名字，即使得名字为程序所知，一个文件如果想使用别处定义的名字则必须包含对那个名字的声明。而变量的定义指申请存储空间，并将其与变量名相关联，除此之外，还可以为变量指定初始值。在程序中变量可以声明多次，但只能定义一次。一般而言，定义就是声明。但C++中由于extern的缘故，变量的声明和定义是可以分开的。"),t("strong",[s._v("凡是没有带extern的声明同时也都是定义")]),s._v("。而对函数而言，带有{}是定义，否则是声明。如果想声明一个变量而非定义它，就在变量名前添加关键字extern，且不要显式的初始化变量。看下面的例子：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileA.cpp")]),s._v("\nint i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明并定义i")]),s._v("\nint j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明并定义j")]),s._v("\ndouble "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("double d1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("double d2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileB.cpp")]),s._v("\nextern int i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明i而非定义")]),s._v("\nextern int j "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义j而非声明，会报错，多重定义")]),s._v("\nint j"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误，重定义，注意这里的j是在全局范围内声明")]),s._v("\nextern double "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("double d1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("double d2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("复制")]),s._v(" "),t("h5",{attrs:{id:"c-中的链接属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#c-中的链接属性"}},[s._v("#")]),s._v(" "),t("strong",[s._v("C++中的链接属性")])]),s._v(" "),t("p",[s._v("链接属性一定程度范围决定着符号的作用域，C++中链接属性有三种：none(无)、external（外部）和 internal(内部）。")]),s._v(" "),t("ul",[t("li",[s._v("external，外部链接属性。非常量全局变量和自由函数（除成员函数以外的函数）均默认为外部链接的，它们具有全局可见性，在全局范围不允许重名，详情可见例子。")]),s._v(" "),t("li",[s._v("internal，内部链接属性。具有该属性的类型有，const对象，constexpr对象，命令空间内的静态对象(static objects in namespace scope)")]),s._v(" "),t("li",[s._v("none，在类中、函数体和代码块中声明的变量默认是具有none链接属性。它和internal一样只在当前作用域可见。")])]),s._v(" "),t("h3",{attrs:{id:"extern的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extern的用法"}},[s._v("#")]),s._v(" "),t("strong",[s._v("extern的用法")])]),s._v(" "),t("p",[s._v("extern有3种用法，分别如下：")]),s._v(" "),t("h4",{attrs:{id:"非常量全局变量的外部链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非常量全局变量的外部链接"}},[s._v("#")]),s._v(" "),t("strong",[s._v("非常量全局变量的外部链接")])]),s._v(" "),t("p",[s._v("最常见的用法，当链接器在一个全局变量声明前看到extern关键字，它会尝试在其他文件中寻找这个变量的定义。这里强调全局且非常量的原因是，全局非常量的变量默认是外部链接的。")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileA.cpp")]),s._v("\nint i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明并定义全局变量i")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileB.cpp")]),s._v("\nextern int i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明i，链接全局变量")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileC.cpp")]),s._v("\nextern int i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误，多重定义")]),s._v("\nint i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误，这是一个定义，导致多重定义")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    extern int i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//正确")]),s._v("\n    int i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//正确，新的局部变量i;")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("复制")]),s._v(" "),t("h4",{attrs:{id:"常量全局变量的外部链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常量全局变量的外部链接"}},[s._v("#")]),s._v(" "),t("strong",[s._v("常量全局变量的外部链接")])]),s._v(" "),t("p",[s._v("常量全局变量默认是内部链接的，所以想要在文件间传递常量全局变量需要在定义时指明extern，如下所示：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileA.cpp")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" int i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//定义")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//fileB.cpp                    //声明")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" int i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("复制")]),s._v(" "),t("h4",{attrs:{id:"extern-c-和extern-c-函数声明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extern-c-和extern-c-函数声明"}},[s._v("#")]),s._v(" "),t("strong",[s._v('extern "C" 和extern "C++"函数声明')])]),s._v(" "),t("p",[s._v('在C++中，当与字符串连用时，extern指明当前声明使用了其他语言的链接规范，如extern "C"，就指明使用C语言的链接规范。原因是，C++语言在编译的时候为了解决函数的多态问题，会将函数名和参数联合起来生成一个中间的函数名称，而C语言则不会，因此会造成链接时无法找到对应函数的情况，此时C函数就需要用extern “C”进行链接指定，这告诉编译器，请保持我的名称，不要给我生成用于链接的中间函数名。C和C++对函数的处理方式是不同的.extern "C"是使C++能够调用C写作的库文件的一个手段，如果要对编译器提示使用C的方式来处理函数的话，那么就要使用extern "C"来说明。')]),s._v(" "),t("p",[s._v("例子如下：")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明printf函数使用C链接")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" int "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printf")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" char "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("fmt"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//声明指定的头文件内所有的东西都使用 C 链接")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#include "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("stdio"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  声明函数ShowChar和GetChar使用 C 链接")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    char "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ShowChar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("char ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    char "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetChar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//  定义函数 ShowChar 和 GetChar 使用 C 链接")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" char "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ShowChar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("char ch")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("putchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" char "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("GetChar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    char ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    ch "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" ch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 声明全局变量 errno 为C链接")]),s._v("\nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" int errno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//又比如，在程序中常见的代码段")]),s._v("\n#ifdef __cplusplus  \nextern "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n#endif  \n  \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**** some declaration or so *****/")]),s._v("  \n  \n#ifdef __cplusplus  \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  \n#endif\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里__cplusplus是cpp中的自定义宏，定义了这个宏就表明这是一段cpp的代码，也就是说，")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//上面的代码的含义是:如果这是一段cpp的代码，那么加入extern "C"{和}处理其中的代码。')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br")])]),t("p",[s._v("复制")]),s._v(" "),t("h3",{attrs:{id:"一些问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一些问题"}},[s._v("#")]),s._v(" "),t("strong",[s._v("一些问题")])]),s._v(" "),t("ul",[t("li",[s._v("使用extern和包含头文件来引用函数有什么区别呢？")])]),s._v(" "),t("p",[s._v("与include相比，extern引用另一个文件的范围小，include可以引用另一个文件的全部内容。extern的引用方式比包含头文件要更简洁。extern的使用方法是直接了当的，想引用哪个函数就用extern声明哪个函数。这样做的一个明显的好处是，会加速程序的编译（确切的说是预处理）的过程，节省时间。在大型C程序编译过程中，这种差异是非常明显的。")]),s._v(" "),t("h3",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" "),t("strong",[s._v("注意事项")])]),s._v(" "),t("ul",[t("li",[s._v("不要把变量定义放入.h文件，这样容易导致重复定义错误")]),s._v(" "),t("li",[s._v("尽量使用static关键字把变量定义限制于该源文件作用域，除非变量被设计成全局的。")]),s._v(" "),t("li",[s._v("可以在头文件中声明一个变量，在用的时候包含这个头文件就声明了这个变量。")])]),s._v(" "),t("h1",{attrs:{id:"references"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[s._v("#")]),s._v(" references")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://cloud.tencent.com/developer/article/2099958",target:"_blank",rel:"noopener noreferrer"}},[s._v("extern关键字-腾讯云开发者社区-腾讯云 (tencent.com)"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=e.exports}}]);