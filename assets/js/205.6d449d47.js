(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{518:function(t,a,v){"use strict";v.r(a);var _=v(8),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"逻辑结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑结构"}},[t._v("#")]),t._v(" 逻辑结构")]),t._v(" "),a("ul",[a("li",[t._v("定义: 零个或多个元素的有限序列.序列代表其数据元素是有顺序的\n"),a("ul",[a("li",[t._v("除开首尾的数据元素外,所有元素都有一个前驱元素与后继元素")])])]),t._v(" "),a("li",[t._v("抽象类型")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储结构"}},[t._v("#")]),t._v(" 存储结构")]),t._v(" "),a("h3",{attrs:{id:"顺序存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#顺序存储结构"}},[t._v("#")]),t._v(" 顺序存储结构")]),t._v(" "),a("ul",[a("li",[t._v("数据元素按顺序在内存中存储,以c语言中的数组为基础,数组元素就是数据元素")]),t._v(" "),a("li",[t._v("线性表的长度小于数组的长度,这里的数组相当于为其分配的空间")]),t._v(" "),a("li",[t._v("对于以顺序存储对数据结构来说,元素的地址计算是可以在"),a("em",[t._v("O")]),t._v("(1)存取时间完成的,具有这一特点的存储结构称为随机存取结构")])]),t._v(" "),a("h4",{attrs:{id:"线性表顺序结构的优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线性表顺序结构的优缺点"}},[t._v("#")]),t._v(" 线性表顺序结构的优缺点")]),t._v(" "),a("ul",[a("li",[t._v("无须为逻辑关系额外分配存储空间,通过计算地址的方式进行增删改查的操作")]),t._v(" "),a("li",[t._v("快速读取")]),t._v(" "),a("li",[t._v("插入和删除操作需要移动大量元素")]),t._v(" "),a("li",[t._v("线性表容量有最大限制")]),t._v(" "),a("li",[t._v("[ ] 编写程序实现顺序存储的线性表结构")])]),t._v(" "),a("h3",{attrs:{id:"链式存储结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链式存储结构"}},[t._v("#")]),t._v(" 链式存储结构")]),t._v(" "),a("ul",[a("li",[t._v("在内存中不一定以顺序的方式进行存储,而是在数据元素中存储好其指向的另一个数据元素\n"),a("ul",[a("li",[t._v("称为链表")])])]),t._v(" "),a("li",[t._v("区分头指针与头结点的概念\n"),a("ul",[a("li",[t._v("头指针:链表中指向第一个结点的指针")]),t._v(" "),a("li",[t._v("头结点:为了操作的统一与方便,放在存储有意义的数据元素之前的一个结点,当有头结点存在时,头指针指向的就是头结点")])])]),t._v(" "),a("li",[t._v("单链表的增删改查的实现")]),t._v(" "),a("li",[t._v("[ ] 静态链表的相关原理")])])])}),[],!1,null,null,null);a.default=s.exports}}]);